lesson 4 : PING
           ansible -i invertory_file -m ping --ask-become-pass

lesson 5 : use basic ansible command
           - ansible all -m apt -a name=vim-nox --become --ask-become-pass
             #installa vim-nox chiedendo la password (comune per tutti i server)


lesson 6 : create a first playbook which will install apache2 in all the server in the invetory
           comando:
           ansible-playbook --ask-become-pass install_apache.yml 
           il file usa il parametro 
            state = latest
               in questo modo posso lanciare lo stesso playbook per aggiornare apache2 
               all'ultima versione
            state = absent
               permette di rimuovere il package
               
           CENTOS: init apache
                   - sudo systemctl start httpd
                   - sudo systemctl enable httpd
                   - sudo firewall-cmd --add-port=80/tcp

lesson 7 : refactoring of playbook
           -apt add update_cache = yes as an option
           -use of variable and have only one play that do the installation 
            for different distribution
           -use of "package" as general package manager of ansible for different distry

lesson 8 : cambio codice ed ottimizzazione 
           uso di variabili
           
           nel file invetory: a fianco l'IP
             192.168.0.0 apache_package=apache2
           nel file ym;
           apt:
             name: 
               - "{{ apache_package }}"

lesson 9 : use of group in order to execute different tast
           based on the group

lesson 10: use of tags
           after task name
               tags: nome_tag
           to see list of tags
               ansible-playbook --list-tags sites.yml
           to run one tag
               ansible-playbook --tags nometag --ask-become-pass 

FEDORA open port by command line
firewall-cmd  --add-port=80/tcp
